{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\fswiss\fprq0\fcharset0 Arial;}{\f4\fnil\fprq0\fcharset2 StarSymbol;}{\f5\froman\fprq2\fcharset0 Times New Roman;}{\f6\fmodern\fprq1\fcharset0 Courier New;}{\f7\fnil\fprq2\fcharset2 StarSymbol;}{\f8\fnil\fprq2\fcharset0 Lucida Sans Unicode;}{\f9\fnil\fprq2\fcharset0 Tahoma;}{\f10\fnil\fprq0\fcharset0 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red128\green128\blue128;}
{\stylesheet{\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\snext1 Default;}
{\s2\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon1\snext2 Text body;}
{\s3\sb240\sa120\keepn\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\afs28\lang255\ltrch\dbch\afs28\langfe255\loch\f2\fs28\lang1033\sbasedon1\snext2 Heading;}
{\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b\sbasedon3\snext2{\*\soutlvl0} Heading 1;}
{\s5\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ai\ab\ltrch\dbch\af8\afs28\langfe255\ai\ab\loch\f0\fs28\lang1033\i\b\sbasedon3\snext2 Heading 2;}
{\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b\sbasedon3\snext2{\*\soutlvl2} Heading 3;}
{\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b\sbasedon3\snext2{\*\soutlvl3} Heading 4;}
{\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b\sbasedon3\snext2{\*\soutlvl4} Heading 5;}
{\s9\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs21\lang255\ab\ltrch\dbch\af8\afs21\langfe255\ab\loch\f0\fs21\lang1033\b\sbasedon3\snext2 Heading 6;}
{\s10\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs21\lang255\ab\ltrch\dbch\af8\afs21\langfe255\ab\loch\f0\fs21\lang1033\b\sbasedon3\snext2 Heading 7;}
{\s11\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs21\lang255\ab\ltrch\dbch\af8\afs21\langfe255\ab\loch\f0\fs21\lang1033\b\sbasedon3\snext2 Heading 8;}
{\s12\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs21\lang255\ab\ltrch\dbch\af8\afs21\langfe255\ab\loch\f0\fs21\lang1033\b\sbasedon3\snext2 Heading 9;}
{\s13\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs21\lang255\ab\ltrch\dbch\af8\afs21\langfe255\ab\loch\f0\fs21\lang1033\b\sbasedon3\snext2 Heading 10;}
{\s14\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af10\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon2\snext14 List;}
{\s15\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon2\snext15 Table Contents;}
{\s16\cf0\qc{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\rtlch\af9\afs24\lang255\ab\ltrch\dbch\af8\afs24\langfe255\ab\loch\f0\fs24\lang1033\b\sbasedon15\snext16 Table Heading;}
{\s17\sb120\sa120\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af10\afs20\lang255\ai\ltrch\dbch\af8\afs20\langfe255\ai\loch\f0\fs20\lang1033\i\sbasedon1\snext17 Caption;}
{\s18\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon17\snext18 Table;}
{\s19\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af10\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon1\snext19 Index;}
{\s20\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b\sbasedon3\snext20 Contents Heading;}
{\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon19\snext21 Contents 1;}
{\s22\li566\ri0\lin566\rin0\fi0\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon19\snext22 Contents 3;}
{\s23\li849\ri0\lin849\rin0\fi0\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon19\snext23 Contents 4;}
{\s24\li1132\ri0\lin1132\rin0\fi0\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033\sbasedon19\snext24 Contents 5;}
{\*\cs26\cf0\rtlch\af4\afs18\lang255\ltrch\dbch\af4\afs18\langfe255\loch\f4\fs18\lang1033 Bullets;}
{\*\cs27\cf2\ul\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 Internet Link;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li463}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li643}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li823}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1003}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1183}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1363}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1543}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1723}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1903}}\listid3}
{\list\listtemplateid4
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li463}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li643}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li823}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1003}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1183}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1363}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1543}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1723}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1903}}\listid4}
{\list\listtemplateid5
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8211 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f4\fi-283\li2830}}\listid5}
{\list\listtemplateid6
{\listlevel\levelnfc2\leveljc0\levelstartat100\levelfollow2{\leveltext \'02\'00.;}{\levelnumbers\'01;}\f4\fs18\f4\fs18\f4\fs18\fi-283\li283}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'01.;}{\levelnumbers\'01;}\fi-283\li567}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'02.;}{\levelnumbers\'01;}\fi-283\li850}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'03.;}{\levelnumbers\'01;}\fi-283\li1134}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'04.;}{\levelnumbers\'01;}\fi-283\li1417}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'05.;}{\levelnumbers\'01;}\fi-283\li1701}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'06.;}{\levelnumbers\'01;}\fi-283\li1984}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'07.;}{\levelnumbers\'01;}\fi-283\li2268}
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'08.;}{\levelnumbers\'01;}\fi-283\li2551}
{\*\soutlvl{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow2{\leveltext \'02\'09.;}{\levelnumbers\'01;}\fi-283\li2835}}\listid6}
{\list\listtemplateid7
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid7}
{\list\listtemplateid8
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid8}
{\list\listtemplateid9
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid9}
{\list\listtemplateid10
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid10}
{\list\listtemplateid11
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid11}
{\list\listtemplateid12
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid12}
{\list\listtemplateid13
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid13}
{\list\listtemplateid14
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li283}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li566}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li849}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1132}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1415}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1698}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li1981}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2264}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2547}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f4\fs18\f4\fs18\f4\fs18\f7\fi-283\li2830}}\listid14}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}{\listoverride\listid2\listoverridecount0\ls1}{\listoverride\listid3\listoverridecount0\ls2}{\listoverride\listid4\listoverridecount0\ls3}{\listoverride\listid5\listoverridecount0\ls4}{\listoverride\listid6\listoverridecount0\ls5}{\listoverride\listid7\listoverridecount0\ls6}{\listoverride\listid8\listoverridecount0\ls7}{\listoverride\listid9\listoverridecount0\ls8}{\listoverride\listid10\listoverridecount0\ls9}{\listoverride\listid11\listoverridecount0\ls10}{\listoverride\listid12\listoverridecount0\ls11}{\listoverride\listid13\listoverridecount0\ls12}{\listoverride\listid14\listoverridecount0\ls13}}

{\info{\creatim\yr2004\mo8\dy17\hr0\min40}{\revtim\yr2005\mo2\dy5\hr18\min5}{\printim\yr1601\mo1\dy1\hr0\min0}{\comment StarWriter}{\vern6450}}\deftab709
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default;}}
\paperh16837\paperw11905\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Libsql documentation 0.55}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 This manual describes the -intended- functionality as of version 0.52. version 0.52 is not a stable release, please download latest version.}
\par {\loch\f0\fs24\lang1033\i0\b0 This documentation is a collection of available information, and desperately needs to be restructured.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 Welcome to libsql. Libsql is a powerfull library written in Pascal to access SQLite, MySQL and Embedded MySQL databases and ODBC databases.}
\par {\loch\f0\fs24\lang1033\i0\b0 Libsql is compatible with Delphi 4 and higher, Kylix 1 and higher, and Freepascal (1.9+)}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Features:}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Multi-thread environment suited}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Unicode support}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Support for both embedded and remote server mysql}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 sophisticated way of fetching results.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Can hold multiple result sets in-memory.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 History of years of practical usage}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Library-version independent:}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 *  loads both sqlite 2 based (2.8 common) and sqlite 3.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 * loads any common libmysql.dll version (3.23.x, 4.0, 4.1, 5.0)}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 * loads embedded mysql (libmysqld.dll) version 4.1 (recommended version, 4.0 is buggy)}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Neat object hiearchy with common TSqlDB ancestor, providing almost {\ul identical} interface for mysql and sqlite. This allows to quick porting of applications to/from mysql and sqlite, or making them support both databases.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 FormatQuery Allows you to keep queries readable, and putting variables in it conveniently. It works just like string or datetime formatting functions.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Methods allowing native WideString support, with gracefull downgrade to 8-but, with automatic utf-8 encoding/decoding, for databases that do not support unicode.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Identical methods to query and fetch data, wether you use sqlite, mysql or odbc.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls13\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Various methods to query and fetching results, allowing maximum flexability to the programmer.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \page\pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \sect\sbknone\cols1\ltrsect
\pard\plain \ltrpar\s20\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Table of Contents}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Libsql documentation 0.55\tab 1}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Features:\tab 1}
\par {\loch\f0\fs24\lang1033\i0\b0 Addresses:\tab 3}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Introduction.\tab 5}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 what is libsql all about.\tab 5}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 What is libsql\tab 5}
\par {\loch\f0\fs24\lang1033\i0\b0 What is libsql not\tab 5}
\par {\loch\f0\fs24\lang1033\i0\b0 Advantages\tab 5}
\par {\loch\f0\fs24\lang1033\i0\b0 Limitations\tab 5}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Databases supported by libsql\tab 5}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Sqlite\tab 5}
\par {\loch\f0\fs24\lang1033\i0\b0 mysql\tab 5}
\par {\loch\f0\fs24\lang1033\i0\b0 odbc\tab 5}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Quickstart\tab 7}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Creating a database object\tab 7}
\par {\loch\f0\fs24\lang1033\i0\b0 Connecting to your database\tab 7}
\par {\loch\f0\fs24\lang1033\i0\b0 Querying the database\tab 8}
\par {\loch\f0\fs24\lang1033\i0\b0 Fetching the result sets:\tab 8}
\par {\loch\f0\fs24\lang1033\i0\b0 Using multiple result sets:\tab 8}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Code Examples\tab 9}
\par \pard\plain \ltrpar\s23\cf0\tldot\tqr\tx10486{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li849\ri0\lin849\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 simple query, storing results in memory:\tab 9}
\par {\loch\f0\fs24\lang1033\i0\b0 simple formatted query \tab 9}
\par {\loch\f0\fs24\lang1033\i0\b0 simple query, fetching row by row \tab 9}
\par {\loch\f0\fs24\lang1033\i0\b0 query using a TResultSet object\tab 9}
\par {\loch\f0\fs24\lang1033\i0\b0 formatted query using a TResultSet object \tab 10}
\par {\loch\f0\fs24\lang1033\i0\b0 fetching on a per-row base using the result set.\tab 10}
\par {\loch\f0\fs24\lang1033\i0\b0 multiple result sets\tab 10}
\par {\loch\f0\fs24\lang1033\i0\b0 Executing a query, fetching row by row:\tab 11}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Remarks on result sets:\tab 11}
\par {\loch\f0\fs24\lang1033\i0\b0 SQL Insert, Update, Delete\tab 11}
\par {\loch\f0\fs24\lang1033\i0\b0 Last but not least about uniform data access.\tab 11}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Project information\tab 13}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 What is the history of libsql.\tab 13}
\par {\loch\f0\fs24\lang1033\i0\b0 For who is libsql targeted\tab 13}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 off-topic and a bit of history\tab 13}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Performance\tab 13}
\par {\loch\f0\fs24\lang1033\i0\b0 Future development\tab 13}
\par {\loch\f0\fs24\lang1033\i0\b0 Current status\tab 14}
\par {\loch\f0\fs24\lang1033\i0\b0 Object hiearchy\tab 14}
\par {\loch\f0\fs24\lang1033\i0\b0 How sqlite works\tab 14}
\par {\loch\f0\fs24\lang1033\i0\b0 Sqlite file structure:\tab 14}
\par {\loch\f0\fs24\lang1033\i0\b0 Libsql and multi-threading.\tab 15}
\par {\loch\f0\fs24\lang1033\i0\b0 The mysql embedded database\tab 15}
\par {\loch\f0\fs24\lang1033\i0\b0 Version support:\tab 15}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Installing\tab 16}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Installing the libsql libraries\tab 16}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Choosing the right libsql/mysql dll/so binaries.\tab 16}
\par {\loch\f0\fs24\lang1033\i0\b0 Adjusting you IDE / project environment search path.\tab 16}
\par {\loch\f0\fs24\lang1033\i0\b0 Done?\tab 16}
\par {\loch\f0\fs24\lang1033\i0\b0 Installing as components.\tab 16}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Using libsql\tab 17}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Programming introduction\tab 17}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Quick start\tab 17}
\par \pard\plain \ltrpar\s23\cf0\tldot\tqr\tx10486{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li849\ri0\lin849\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Sqlite functionality\tab 18}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Opening The Database:\tab 18}
\par {\loch\f0\fs24\lang1033\i0\b0 Querying The Database\tab 18}
\par {\loch\f0\fs24\lang1033\i0\b0 Accessing The Result Set\tab 18}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Using multiple result sets\tab 19}
\par {\loch\f0\fs24\lang1033\i0\b0 FormatQuery Query parameter formatting \tab 19}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 \line \tab 20}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Usage example - quick introduction\tab 21}
\par \pard\plain \ltrpar\s23\cf0\tldot\tqr\tx10486{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li849\ri0\lin849\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Introduction To Libsql Querying\tab 21}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Integer Example\tab 21}
\par \pard\plain \ltrpar\s23\cf0\tldot\tqr\tx10486{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li849\ri0\lin849\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 The easy way\tab 21}
\par {\loch\f0\fs24\lang1033\i0\b0 the 'tough' way\tab 21}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Unicode property.\tab 22}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Reference\tab 23}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Locking And Unlocking, Transactions:\tab 23}
\par {\loch\f0\fs24\lang1033\i0\b0 Threading\tab 23}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 mysql\tab 23}
\par {\loch\f0\fs24\lang1033\i0\b0 sqlite\tab 23}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Compiler Switches\tab 23}
\par {\loch\f0\fs24\lang1033\i0\b0 Last Insert ID\tab 24}
\par {\loch\f0\fs24\lang1033\i0\b0 LastError\tab 24}
\par {\loch\f0\fs24\lang1033\i0\b0 Formatting Queries\tab 24}
\par {\loch\f0\fs24\lang1033\i0\b0 String Values\tab 24}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Notes on accessing result sets\tab 24}
\par {\loch\f0\fs24\lang1033\i0\b0 Number of rows and fields\tab 24}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Callback Only\tab 25}
\par {\loch\f0\fs24\lang1033\i0\b0 Limiting memory usage\tab 25}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 maxquerysize \tab 25}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Multiple result sets\tab 25}
\par \pard\plain \ltrpar\s24\cf0\tldot\tqr\tx10769{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li1132\ri0\lin1132\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 UseResultSet\tab 25}
\par {\loch\f0\fs24\lang1033\i0\b0 AddResultSet\tab 26}
\par {\loch\f0\fs24\lang1033\i0\b0 ExistsResultSet\tab 26}
\par {\loch\f0\fs24\lang1033\i0\b0 ClearResultSets\tab 26}
\par {\loch\f0\fs24\lang1033\i0\b0 DeleteResultSet\tab 26}
\par {\loch\f0\fs24\lang1033\i0\b0 Getting a copy of a result set\tab 26}
\par {\loch\f0\fs24\lang1033\i0\b0 Result sets use/abuse\tab 27}
\par \pard\plain \ltrpar\s22\cf0\tldot\tqr\tx10203{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\li566\ri0\lin566\rin0\fi0\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Appendix A. Garbage documentation\tab 28}
\par {\loch\f0\fs24\lang1033\i0\b0 Appendix B. Issues\tab 29}
\par \pard\plain \ltrpar\s21\cf0\tldot\tqr\tx9637{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Credits\tab 30}
\par \sect\sectd\sbknone\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134
\pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Addresses:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033{\field{\*\fldinst HYPERLINK "http://sourceforge.net/projects/libsql" }{\fldrslt \*\cs27\cf2\ul\rtlch\ltrch\dbch\loch\f0\fs24\lang1033{\loch\f0\fs24\lang1033\i0\b0 http://sourceforge.net/projects/libsql}} - releases and release notes}
\par {\field{\*\fldinst HYPERLINK "http://libsql.sourceforge.org/" }{\fldrslt \*\cs27\cf2\ul\rtlch\ltrch\dbch\loch\f0\fs24\lang1033{\loch\f0\fs24\lang1033\i0\b0 http://libsql.sourceforge.org}} - some documentation}
\par {\field{\*\fldinst HYPERLINK "http://groups.yahoo.com/group/libsql" }{\fldrslt \*\cs27\cf2\ul\rtlch\ltrch\dbch\loch\f0\fs24\lang1033{\loch\f0\fs24\lang1033\i0\b0 http://groups.yahoo.com/group/libsql}} - the libsql mailing list}
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Introduction.}
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b what is libsql all about.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par {\loch\f3\fs20\lang1033\i0\b0 Libsql is a set of pascal classes that allow easy and fast acces to sqlite and mysql databases. the 'novelty of libsql is the way you acces result sets. Querying and fetching is done as easy-as-possible while maintaining flexibility.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b What is libsql}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls12\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Object oriented pascal classes for interfacing mysql and sqlite, with sophisticated object structure that allows you to fetch your results flexible.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls11\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Pascal api interfaces for sqlite 2.8x and 3, mysql 3.2x and 4.0, and ODBC 32}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls11\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033{\loch\f3\fs20\lang1033\i0\b0{\ul Identical}}{\loch\f3\fs20\lang1033 methods for querying and fetching results, independant of the used database. Only methods that differ are the Connect methods, because sqlite does not require username/password or hostname.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls10\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Targeted as cross-platform / cross development environment (not all releases fully tested, but probably minor issues) to work on windows (delphi, freepascal), linux (kylix, freepascal) and other unix (freepascal).}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls10\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Support for Unicode (WideString). UTF8 utilities included and integrated.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls10\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Support for multiple result sets, often eliminating the need to hold data locally when copying, or just want results of multiple queries accessable together.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls10\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Multiple ways of fetching your results, from querying directly using the database object to creating your own Tresultset instances, which can be used for later reference. Also, you can choose weather to fetch the query entirely in memory, or to fetch row b
y row.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls10\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Set of api calls (c 'header file' convertations to pascal) for those who want to use database api directly.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b What is libsql not}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls9\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\fs20\lang1033 {\loch\f0\fs20\lang1033\i0\b0 The solution to all your problems.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\fs20\fs20\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls8\aspalpha\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs20\lang255\ltrch\dbch\af8\afs20\langfe255\loch\fs20\lang1033 {\loch\f0\fs20\lang1033\i0\b0 multi-threaded clients can share a database connection}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\fs20\fs20\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls7\aspalpha\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs20\lang255\ltrch\dbch\af8\afs20\langfe255\loch\fs20\lang1033 {\loch\f0\fs20\lang1033\i0\b0 the server can provide better performance to numerous clients}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls7\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\fs20\lang1033 {\loch\f0\fs20\lang1033\i0\b0 result sets are accessable via a convenient object-based interface.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Advantages}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Libsql targets to have simulair interface for several sql servers. Although sql syntax / dialecs may vary, using the methods of querying and fetching result sets remains the same.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Limitations}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 If you look for database specific api, having explicit need for parameter binding, please consider using other (database specific) libraries.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Databases supported by libsql}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Sqlite}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Version 2.8n and version 3.0. Version 3.1 untested but should work since API is identical to 3.0}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b mysql}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 All versions should work. Beware that clients < 4.1 cannot access mysql servers >= 4.1}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b odbc}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 ODBC32 support for windows work. ODBC handling for linux using unixodbc libraries may work (identical api?) but is untested.}
\par 
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Quickstart}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 This section helps you starting by giving elementary code examples.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Creating a database object}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 three ways:}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls6\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 drop the component on your form}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls6\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 create from inside an object scope}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls6\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 create from ouside an object scope}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls6\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 var db: TMyDB;}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 db := TMyDB.Create (Self);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 It is perfectly legal to create an instance of the component without an owner:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 db := TMyDB.Create (nil);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 but take care to free it yourself after you are done.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 You can define your instance as the parent class of all database objects:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var db: TSqlDB;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TMyDB.Create(nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TLiteDB.Create(nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TODBCDB.Create(nil);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Be aware that not all public/published properties are accesable from the TSqlDB ancestor. Inheritants may have specific methods to gatter additional information about the database.}
\par 
\par \pard\plain \sb240\sa120\keepn\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\fs23\lang1033\b {\loch\f0\fs23\lang1033\i0\b Connecting to your database}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Both MySQL and ODBC take username and password. These are not required for SQlite.}
\par {\loch\f0\fs24\lang1033\i0\b0 Connecting to mysql:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.connect (host, user, pass [, database]);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.Use (somedatabase);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Connecting to sqlite:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.Use ('somefilename');}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Connecting to ODBC:}
\par {\loch\f0\fs24\lang1033\i0\b0 The ODBC component provides two ways of connecting:}
\par {\loch\f0\fs24\lang1033\i0\b0 The first connects to a datasource as you have configured on your system (generally using control panel \endash  system administration \endash  odbc data sources).}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.Connect (host, user, pass);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 please note that the host parameter is a bit misleading, it is not a physical host as defined by a computer name, but the name of your ODBC source.}
\par {\loch\f0\fs24\lang1033\i0\b0 The other method is to connect to a ODBC datasource using a connection string. This eliminates to need to specify your connection string, but you must specify a full DSN (Data Source Name) connection string, specifying all parameters like driver name, host
, user credentials etc. Please google for 'odbc dsn' for more information.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var db: TODBCDB;}
\par {\loch\f6\fs24\lang1033\i0\b0   db := TODBCDB.Create (nil);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.DriverConnect (DSN);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Examine the result of the connect / use function, or lasterror, to see if you are connected.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Querying the database}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 There are two methods to query the database:}
\par {\loch\f0\fs24\lang1033\i0\b0 function Query (SQL): Boolean}
\par {\loch\f0\fs24\lang1033\i0\b0 will execute the query and store the (optional) result set in-memory. This has as advantage that the full result set (all rows) are directly accessable by your applciation. Combined with the support for multiple result sets, this is an effective way of que
rying. However, since all results are fetched in-memory, you will have to take care not to execute too large queries. If your query would fetch 50Mb of data, all this data would be stored in memory.}
\par {\loch\f0\fs24\lang1033\i0\b0 Function Execute(SQL): THandle;}
\par {\loch\f0\fs24\lang1033\i0\b0 function FetchRow (Handle, var row: TResultRow): Boolean;}
\par {\loch\f0\fs24\lang1033\i0\b0 procedure FreeResult (Handle);}
\par {\loch\f0\fs24\lang1033\i0\b0 Method 'Execute'  will prepare and execute the query, but not fetch results. You can easily do so using a simple while loop.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 Formatting a query is libsql's alternative to parameter binding. FOrmatQuery works a lot like you would do when formatting strings. You specify the query and the parameters, and the parameters will get filled in. This results in very readable code. It has 
no considerable disadvantage in performance, except when filling large (blob) fields. The advatage of readbable code, and reducing the risk of errors, generalyy by far outbeats the disdavantage of a slight performance penalty.}
\par {\loch\f0\fs24\lang1033\i0\b0 Formatting is avalable for both the Query and the Execute methods.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Fetching the result sets:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 A full result set consist of 0 .. N rows. Each row can be accessed by both field index or field name. Results can be fetched in any general type (string/integer/float) or as variant (default).}
\par {\loch\f0\fs24\lang1033\i0\b0 The object structure is so designed that you can access results by very shorthand code. The current result set is transparently accessable trough the database object.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Using multiple result sets:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Basically there are two (in fact three) ways of using multiple result sets. In addition, a result set can wrap the query method.}
\par {\loch\f0\fs24\lang1033\i0\b0 a. specify a result set to the database object:}
\par {\loch\f0\fs24\lang1033\i0\b0   db.UseResultSet ('somesetname');}
\par {\loch\f0\fs24\lang1033\i0\b0 b. By creating a result set with the database as owner:}
\par {\loch\f0\fs24\lang1033\i0\b0 var rs: TResultSet;}
\par {\loch\f0\fs24\lang1033\i0\b0   rs := TResultSet.Create (db);}
\par {\loch\f0\fs24\lang1033\i0\b0   rs.Query (somesql);}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\sa120\f4\fs18\f4\fs18\f4\fs18 c.}\ilvl0 \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls5\aspalpha\li283\ri0\lin283\rin0\fi-283\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 By using the execute method. The database object will automatically assign a result set when performing Execute, use that result set when doing fetchrow (you may mix up handles), and free it with the FreeResult.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Code Examples}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Now we put all above together:}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b simple query, storing results in memory:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 db := TLiteDB.Create(nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Use ('c:\\temp\\tempdb.db');}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Query ('select 1+1');}
\par {\loch\f6\fs24\lang1033\i0\b0 ShowMessage (db.Results[0][0]);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b simple formatted query }
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var i: Integer;}
\par {\loch\f6\fs24\lang1033\i0\b0 db.FormatQuery ('select %d+%d as asum', [1, 2]);}
\par {\loch\f6\fs24\lang1033\i0\b0 ShowMessage (db.Results[0]['asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 i := db.Results[0]['asum'];}
\par {\loch\f6\fs24\lang1033\i0\b0 showmessage (inttostr(i));}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b simple query, fetching row by row }
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var row : TResultRow;}
\par {\loch\f6\fs24\lang1033\i0\b0     handle: Integer;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TMyDB.Create(nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Connect ('localhost', 'root', '');}
\par {\loch\f6\fs24\lang1033\i0\b0 handle := db.Execute ('select 1+1 as asum');}
\par {\loch\f6\fs24\lang1033\i0\b0 while db.FetchRow (handle, row) do}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (row['asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 FreeResult (handle);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b query using a TResultSet object}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var rs: TResultSet;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TODBCDB.Create (nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Connect ('testodbcsource', '', '');}
\par {\loch\f6\fs24\lang1033\i0\b0 rs := TResultSet.Create (db);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.Query ('select 1+1');}
\par {\loch\f6\fs24\lang1033\i0\b0 writeln (rs.row[0][0]);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.Free;}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b formatted query using a TResultSet object }
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var rs: TResultSet;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TLiteDB.Create (nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Use('c:\\temp\\testsqlite.db');}
\par {\loch\f6\fs24\lang1033\i0\b0 rs := TResultSet.Create (db);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.FormatQuery ('select %d+%d as %s', [1, 2, 'asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 writeln (rs.row[0]['asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.Free;}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b fetching on a per-row base using the result set.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 db := TLiteDB.Create (nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Use('c:\\temp\\testsqlite.db');}
\par {\loch\f6\fs24\lang1033\i0\b0 rs := TResultSet.Create (db);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.FormatExecute ('select %d+%d as %s', [1, 2, 'asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 while rs.FetchRow do}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (rs.Fetched['asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.FreeResult;}
\par {\loch\f6\fs24\lang1033\i0\b0 rs.Free;}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b multiple result sets}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var rs1, rs2: TResultSet;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TLiteDB.Create (nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Use('c:\\temp\\testsqlite.db');}
\par {\loch\f6\fs24\lang1033\i0\b0 rs1 := TResultSet.Create (db);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs2 := TResultSet.Create (db);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs1.FormatQuery ('select %d+%d as %s', [1, 2, 'asum']);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs2.Query ('select 1+1');}
\par {\loch\f6\fs24\lang1033\i0\b0 writeln (rs1.row[0]['asum'] * rs2[0][0]);}
\par {\loch\f6\fs24\lang1033\i0\b0 rs1.Free;}
\par {\loch\f6\fs24\lang1033\i0\b0 rs2.Free;}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b Executing a query, fetching row by row:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 var row1, row2 : TResultRow;}
\par {\loch\f6\fs24\lang1033\i0\b0     h1, h2: Integer;}
\par {\loch\f6\fs24\lang1033\i0\b0 db := TMyDB.Create(nil);}
\par {\loch\f6\fs24\lang1033\i0\b0 db.Connect ('localhost', 'root', '');}
\par {\loch\f6\fs24\lang1033\i0\b0 h1 := db.Execute ('select 1+1 as asum');}
\par {\loch\f6\fs24\lang1033\i0\b0 while db.FetchRow (h1, row1) do}
\par {\loch\f6\fs24\lang1033\i0\b0   begin}
\par {\loch\f6\fs24\lang1033\i0\b0     h2 := db.Execute ('select 2+3 as asum');}
\par {\loch\f6\fs24\lang1033\i0\b0     if db.FetchRow (h2, row2) then}
\par {\loch\f6\fs24\lang1033\i0\b0       writeln (row1['asum'] * row2['asum']);  }
\par {\loch\f6\fs24\lang1033\i0\b0     FreeResult (h2);}
\par {\loch\f6\fs24\lang1033\i0\b0   end;}
\par {\loch\f6\fs24\lang1033\i0\b0 FreeResult(h2);}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Remarks on result sets:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Additionaly, a result set contains parameters like RowsAffected and LastInsertID** (** not ODBC, this is a limitation of the ODBC driver).}
\par {\loch\f0\fs24\lang1033\i0\b0 Execute may not hold this information.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b SQL Insert, Update, Delete}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 For those statements it is recommended to use the Query / FormatQuery methods. They will completely handle the query, return an empty result set but with parameters like rowsaffected and lastinsertid set.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Last but not least about uniform data access.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 libsql is under development. Although i target to make simulair behaviour for all supported databases, this is not always possible. Each database may have it's own way of specifying lasterror, or lastinsertid (ODBC is lacking lastinsertID entirely, and thi
s may be a database specific query, like 'select @@IDENTITY' ).}
\par {\loch\f0\fs24\lang1033\i0\b0 Also there may be minor issues. Some of the code (execute/fetchrow) is relative new, and will not have 100% identical behaviour, although generally you will not notice.}
\par {\loch\f0\fs24\lang1033\i0\b0 You are kindly requested to report any problem or suggestion you may have to the yahoo mailing list: {\field{\*\fldinst HYPERLINK "http://groups.yahoo.com/group/libsql" }{\fldrslt \*\cs27\cf2\ul\rtlch\ltrch\dbch\loch\f0\fs24\lang1033 http://groups.yahoo.com/group/libsql}} }
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Project information}
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b What is the history of libsql.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 It started when i wrote TMyDB and open-sourced it. TMyDB was an object interface based on the ideas i had when working for a project with a mysql database and a self-developed interface. TMyDB 0.1 had almost the same functionality, without copying my (prop
ieraty) code. It did a nice job for me. Results were by then stored in a 2-dimensional string array (so delphi 4 or higher). Although i liked the quering part, it missed features like easy NULL checking, type conversion (inter, float, datetime etc) etc.}
\par {\loch\f3\fs20\lang1033\i0\b0 Some years later, in the summer of 2003, i started writing an interface for sqlite. Based on the ideas of TMyDB, but this time fully object-oriented, i.e. No more two dimensional arrays, but a object set consisting of TResultRow and TResultCell. The query 
syntax stayed more or less the same (for strings, that is), but has more methods for several type fetching and null checking. 'Two-dimensional array like' interface are archieved using 'default' properties, that allows fetching of indexed lists without pro
perty name. This allows writing shorter code.}
\par {\loch\f3\fs20\lang1033\i0\b0 In the end of 2003, i decided to port mysql to a simulair interface, so i merged both the TLiteDB and TMyDB libraries.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b For who is libsql targeted}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 For Delphi, Kylix and Freepascal users that want a handy wrapper around sqlite or mysql databases and do not want to use native available support (for example delphi's BDE) , or use the 'personal edition' of Kylix or Delphi.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b off-topic and a bit of history}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Libsql is very targeted at 'non-visual' applications. Not that those applications may not have a GUI, but lots of the sql interacting maybe done outside the scope of the user. Not that it is not possible to let sqlite interact with your desktop, in fact th
at can be done {\i very convenient}, but that requires some {\i manual programming}.}
\par {\loch\f3\fs20\lang1033\i0\b0 To illustrate that, one of the contributors of libsql is developing an email application[ref]. This typically is an application where there is a lot of user interacting, database access and to make stuff more complex, network access to mailboxes. The featu
res of libsql: fast and shorthand querying, storing result sets, multi-thread environment proof,}
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ai\ab\ltrch\dbch\af3\afs20\langfe255\ai\ab\loch\f3\fs20\lang1033\i\b {\loch\f3\fs20\lang1033\i\b This is not a limitation, this is a feature :)}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ai\ltrch\dbch\af3\afs20\langfe255\ai\loch\f3\fs20\lang1033\i 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 TMyDB originated in a basically GUI based database app where the user did a lot of database interacting. (move to history?) but TMyDB was needed because we met some limitations with borlands data-aware components. At the time, we were working with the (fin
e) Interbase database. We made an abstract wrapper on interbase. Later, we ported the application to mysql. from then, the first mysql unit was born that later on was entirely rewritten (licensing issue) and made object oriented and thus became TMyDB.}
\par {\loch\f3\fs20\lang1033\i0\b0 Somewhere in 2003 i needed an interface to sqlite, took a close watch at the pioneer-interface by ben hochstrasser[], and developed an abject model to access a multi-dimensional result set. The results from this project form teh base of current object stru
cture of libsql. In 2004, i merged code of both TMyDB and TLiteDB libraries into a unviresal library allowing the same interface to both databases.}
\par {\loch\f3\fs20\lang1033\i0\b0 In 2004 the code improved a lot. For example, it was made independent of the dll version of the mysql client library (libmysql.dll). Also, sqlite3 found an integrated place, so sqlite 2 and 3 support is in same object.}
\par {\loch\f3\fs20\lang1033\i0\b0 Fresh in 2005 odbc support is added. Also, functionality is improved by improving support for result sets, also in multi-thread environment. Further, support for fetching on a per-row base is added. This is a significant advance, since it solves the major 
limitation of libsql, namely that result sets got all stored in memory.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Performance}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Generally, libsql provides excellent performance. Overhead is kept to a minimum. Depending on the usage situations, memory usage may be an issue when using the 'Query' method, which by the way can easily be solved with the 'CallBackOnly' property that will
 hold a single result row in memory at a time, or by using the Execute/Fetchrow/FreeResult method set.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Future development}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 *I'm looking toward ODBC support. Sqlite3 support must be integrated. Embedded mysql must be debugged. Interface for mysql 4.1 based clients must be written. ** All this has been done as of version 0.50.}
\par {\loch\f3\fs20\lang1033\i0\b0 *support for multiple result sets ** done.}
\par {\loch\f3\fs20\lang1033\i0\b0 *rewrite dll-interface to be more flexible. ** done.}
\par {\loch\f3\fs20\lang1033\i0\b0 *mysql api interface should preferable have removed the compiler switch and automatically detect the libmysql.dll version. this however involves typing and naming issues, which of course can be solved. it is just a lot of work. ** done.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Current status}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Recently i received a lot of support from people. I mention Patrick, Miha, Vladimir and Tiz, sorry for those i forgot to name. It seems libsql is getting some populair, whereas i not yet felt like 'stable release'. Limited time is bad excuse, i know. Proba
bly some things on the 'todo' list are done by the time you read thise document. Check the sourceforge page for current version now and then, or subscribe the mailing list.}
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Object hiearchy}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 The base class is TPasDB. Most common methods are in there. From there, TLiteDB and TMyDB inherited. all they have to do is the interfacing with the dll (querying and storing the result set), and some database-specific features.}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 TComponent (** or TObject (compiler switch) )}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \endash }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls4\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 TPasBD}
\par \pard\plain {\listtext\pard\plain \li643\ri0\lin643\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \endash }\ilvl2 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls3\li643\ri0\lin643\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 TLiteDB}
\par \pard\plain {\listtext\pard\plain \li643\ri0\lin643\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \endash }\ilvl2 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls3\li643\ri0\lin643\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0  - TLiteDB3 (?)}
\par \pard\plain {\listtext\pard\plain \li643\ri0\lin643\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \endash }\ilvl2 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls2\li643\ri0\lin643\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 TMyDB}
\par \pard\plain {\listtext\pard\plain \li643\ri0\lin643\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \endash }\ilvl2 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls2\li643\ri0\lin643\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 TODBCDB}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par {\loch\f3\fs20\lang1033\i0\b0 The result set is based as follows:}
\par {\loch\f3\fs20\lang1033\i0\b0 TResultSet (next (0.4) release) }
\par {\loch\f3\fs20\lang1033\i0\b0 contains  0 \endash  (N-1) ResultRow(s)}
\par {\loch\f3\fs20\lang1033\i0\b0        contains 0 \endash  (N-1) ResultCell(s)}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b How sqlite works}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Once you query the database, all rows are fetched at once (up to max_memory_limit) (yes, this can be changed, also on the fly, read on).}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 Each row is stored in a TResultRow, where each field is stored in a TResultCell. This generates some memory overhead, but often also removes the need of storing the result set in local variables. On small queries (probably >95% of your queries) the memory 
usage should be no issue at all. Object instances are re-used in consequent queries where possible, avoiding possible memory fragmentation on queries with simulair result sets. A Row Field is placed in an instance of TResultCell, which generally will conta
in the data as (String (""PChar""). Type conversion is done on the fly. This is very like the data is retrieved from the sqli interface client dll/embedded server. Direct instances of TObject do only take a minimum of memory or cpu overhead.}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 You can choose to set the CallBackOnly property. If set, you should provide in a callback handler (the OnFetchRow event), which will in turn receive the results row by row, on row at a time. This way, you can step trough your result set, the 'cursor' is au
tomatically moved forward. currenlty, there is no method to set/step back the cursor manually.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Sqlite file structure:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 I had to invent _some_ naming convention.}
\par {\loch\f3\fs20\lang1033\i0\b0 lib***.pas - the dll interface files, for example: libsqlite.pas, libmysql.pas, libsqlite3.pas, libmysqld.pas}
\par {\loch\f3\fs20\lang1033\i0\b0 pas****.pas - the libsql object structure to interface with the database}
\par {\loch\f3\fs20\lang1033\i0\b0 sqlcomponents.pas - used if you want to install as non-visual components}
\par {\loch\f3\fs20\lang1033\i0\b0 *.txt - notes, license, readme, documentation}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 Using the dll interface yourself:}
\par {\loch\f3\fs20\lang1033\i0\b0 Of course, you are free not to use the TSqlDB classes, but interface with the database directly using the libxxx.pas dll interface files. Also, mixing 'low-level' and high level is possible. The database handle is available to you, you can use this handle 
to access the dll-functions yourself, for specific actions.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Libsql and multi-threading.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 libsql is designed to work with multi-threaded applications. For mysql, it is recommended (although not necessary) that each thread obtains its own intstance of TMyDB, and therefore it's own connection handle. This is also what is suggested in the libmysql
(client).dll/so documentation. If you want to share one instance of the database object (for what reason whatsoever) you must make sure to call the 'Lock' and 'Unlock' methods.}
\par {\loch\f3\fs20\lang1033\i0\b0 For sqlite, some more effort has been done. Since sqlite does not offer concurrent access to the database, it is of no use to interact with the database from several thread simultaniously. Therefore, a (transparent) handler has been build into TLiteDB that
 will make sure there is no concurrent access to a single sqlite database file (that is: from within one application). Again, it is wisest to have each thread create its own instance of TLiteDB. at that point, you don't have to bother about any locking. If
 you would share the TLiteDB object across multiple threads, make sure you call the Lock and Unlock methods.}
\par {\loch\f3\fs20\lang1033\i0\b0 Transactions}
\par {\loch\f3\fs20\lang1033\i0\b0 Once you call the 'starttransaction' method, the database will atomatically gets locked for that specific thread (both mysql and sqlite). It is released after 'commit' or 'rollback'.}
\par {\loch\f3\fs20\lang1033\i0\b0 Please note that transaction support for mysql is only valid for InnoDB tables. It will not do harm nor generate any errors on MyISAM tables, the mysql server will just silently ignore the transaction.}
\par {\loch\f3\fs20\lang1033\i0\b0 Please study the threading examples for this issues.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b The mysql embedded database}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Mysql embedded is supported. Either instance of TMyDB can choose to connect to a remote mysql server using libmysql client or load the embedded server dll.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Version support:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 sqlite 2.8.x}
\par {\loch\f3\fs20\lang1033\i0\b0 sqlite 3.0 (*)}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 3.2x}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 4.0}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 4.0 embedded}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 4.1}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 4.1 embedded}
\par {\loch\f3\fs20\lang1033\i0\b0 mysql 5.0}
\par {\loch\f3\fs20\lang1033\i0\b0 odbc 32, 1.00 and higher (3.00 recommended)}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 sqlite and mysql is supposed to work correclty on linux platforms using the kylix compiler. Freepascal is only known to work on win32 platforms, but should work on linux and unix platforms as well.}
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Installing}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Installing the libsql libraries}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Extract your files to a convenience place. On my windows box that would be c:\\projects\\lib\\libsql for example. On my linux it would be ~/projects/lib (/home/rene/projects/lib). Other convenient places are in your \{$DELPHI\}\\Lib directory.}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f3\fs20\f3\fs20\f3\fs20\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls1\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 Optionally install the components. An instance for every supported database will be installed, as well as the TASyncDB component that allows background querying (mainly intended for inserting-only for loggin applications)}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\li283\ri0\lin283\rin0\fi0\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Choosing the right libsql/mysql dll/so binaries.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 *make sure you have the correct binaries:}
\par {\loch\f3\fs20\lang1033\i0\b0 ** libsql.dll (version 2.8x, no tcl support needed)}
\par {\loch\f3\fs20\lang1033\i0\b0 ** libsql3.dll}
\par {\loch\f3\fs20\lang1033\i0\b0 ** libmysql.dll / libmysqlclient.so (watch the version)}
\par {\loch\f3\fs20\lang1033\i0\b0 ** libmysqld.dll (the embedded mysql server)}
\par 
\par {\loch\f3\fs20\lang1033\i0\b0 binaries i got stuff to work with are available at the sourceforge project page.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Adjusting you IDE / project environment search path.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 *Adjust your programming environment to include above path in your library search path, or add this path to your project.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Done?}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 That's it. }
\par {\loch\f3\fs20\lang1033\i0\b0 you may want to adjust compiler switches, especially if you use a not full supported compiler (delphi 2, freepascal 1).}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Installing as components.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 {\loch\f3\fs20\lang1033\i0\b0 *Optionally, you can install the database interfaces as components. to do so, choose 'install components' and hit the file [sqlcomponents.pas].}
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Using libsql}
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Programming introduction}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Quick start}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Make sure you have sqlite 2.8 (sqlite.dll) in your path or adjust code (especially 'Create') according to the dll interface you use.}
\par {\loch\f0\fs24\lang1033\i0\b0 TLiteDB returns its results as TResultRow. A TResultRow (can) return TResultCell. }
\par {\loch\f0\fs24\lang1033\i0\b0 This may sound complex, but in fact it makes life easier and it means that you can easily do: }
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 uses libsqlite, passqlite;}
\par {\loch\f6\fs24\lang1033\i0\b0 //..//}
\par {\loch\f6\fs24\lang1033\i0\b0 var db: TLiteDB;}
\par {\loch\f6\fs24\lang1033\i0\b0 //..//}
\par {\loch\f6\fs24\lang1033\i0\b0   db:=TLiteDB.Create ('somedb'); }
\par {\loch\f6\fs24\lang1033\i0\b0   db.Query ('select 1+1'); }
\par {\loch\f6\fs24\lang1033\i0\b0   somestring:=db.Results[0][0]; }
\par {\loch\f6\fs24\lang1033\i0\b0   someint:=db.Results[0].Format[0].AsInteger; }
\par {\loch\f6\fs24\lang1033\i0\b0   if db.Results[0].IsNull[0] then }
\par {\loch\f6\fs24\lang1033\i0\b0     ShowMessage ('null'); }
\par {\loch\f6\fs24\lang1033\i0\b0   db.Free; }
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 The above will:}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 * Create an instance of TLiteDB. This willin turn load the dll library.}
\par {\loch\f0\fs24\lang1033\i0\b0 * Open or create a sqlite database 'somedb';}
\par {\loch\f0\fs24\lang1033\i0\b0 * Do a 'dummy' query to test the sqlite library. If this succeeds, probably all is ok.}
\par {\loch\f0\fs24\lang1033\i0\b0 * Show several methods to access the results: as string, as integer}
\par {\loch\f0\fs24\lang1033\i0\b0 * Test for NULL value (should not, but try change row or column index and it should) and report}
\par {\loch\f0\fs24\lang1033\i0\b0 * Free the TLiteDB instance but does not unload the dll. The dll stays loaded for consequent access. On application termination the dll will get unloaded.}
\par {\loch\f0\fs24\lang1033\i0\b0 * You can keep the code about the same but alter as follows:}
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   var db: TMyDB;}
\par {\loch\f6\fs24\lang1033\i0\b0   db := TMyDB.Create;}
\par {\loch\f6\fs24\lang1033\i0\b0   db.Connect ('localhost', 'mysqluser', 'mypass', 'somedb');}
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af3\afs20\lang255\ltrch\dbch\af3\afs20\langfe255\loch\f3\fs20\lang1033 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b Sqlite functionality}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Opening The Database:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Open the database with the create method: }
\par {\loch\f6\fs24\lang1033\i0\b0{\f6   DB := TLiteDB.Create(Self, databasename);}}{\loch\f0\fs24\lang1033 }
\par {\loch\f0\fs24\lang1033\i0\b0 Alternatively, use the use method: }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB := TLiteDB.Create(Self);}
\par {\loch\f6\fs24\lang1033\i0\b0   DB.Use (databasename);}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB := TMyDB.create (Self);}
\par {\loch\f6\fs24\lang1033\i0\b0   DB.Connect (User, Host, Pass, Database);}
\par {\loch\f6\fs24\lang1033\i0\b0 or: }
\par {\loch\f6\fs24\lang1033\i0\b0   if DB.Connect (User, Host, Pass) then }
\par {\loch\f6\fs24\lang1033\i0\b0       begin }
\par {\loch\f6\fs24\lang1033\i0\b0         DB.Use (Database); }
\par {\loch\f6\fs24\lang1033\i0\b0         //... }
\par {\loch\f6\fs24\lang1033\i0\b0       end; }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Querying The Database}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 You can query by the query method: }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0     DB.Query (sql); }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 to get just one result use the queryone: }
\par 
\par {\loch\f6\fs24\lang1033\i0\b0{\f6   SomeString=DB.queryone (sql);}}{\loch\f0\fs24\lang1033 }
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 which is the same as: }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par {\loch\f6\fs24\lang1033\i0\b0   DB.Query (sql) }
\par {\loch\f6\fs24\lang1033\i0\b0   SomeString := DB.Results[0][0]; }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Accessing The Result Set}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 You can access results by one of the following methods:}
\par  
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   1. db.Results[y][x]}
\par  
\par {\loch\f6\fs24\lang1033\i0\b0   2. db.Results[y].Format[x].AsDesiredFormat }
\par  
\par {\loch\f6\fs24\lang1033\i0\b0   3. db.Results[y].ByField['fieldname'] }
\par  
\par {\loch\f6\fs24\lang1033\i0\b0   4. db.Results[y].AsNameValue }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033  
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 Explanation}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Method 1 just returns a string. }
\par {\loch\f0\fs24\lang1033\i0\b0 With method 2 the AsString, AsInteger, AsBool and AsFloat are currently implemented, AsDateTime will follow. }
\par {\loch\f0\fs24\lang1033\i0\b0 Method 3 is about the same as Rresults[y][x], except that instead of x you fill in the field name. }
\par {\loch\f0\fs24\lang1033\i0\b0 Method 4 will return a stringlist with name-values pairs. just do something like }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   mymemo.lines.assign (db.results[y].asnamevalue); }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Results[y] will return a TResultRow, with it's properties. }
\par {\loch\f0\fs24\lang1033\i0\b0 Results[y].Format[x] will return a TResultCell, it's methods are the AsInteger?, AsString etc conversions. }
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 To determinate if a result is null, use the IsNull which will return a boolean result.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.results[y].IsNull[x] }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033  
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Using multiple result sets}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 As of version 0.41, it is possible to use multiple result sets. This is implemnted transparently for previous versions. A TSqlDB descendant will create a default result set. You can switch to another resultset by using}
\par {\loch\f0\fs24\lang1033\i0\b0   db.UseResultSet ('somename');}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 if a result set not yet exists, it will be created}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 which will use this result set for consequent queries. You can define as many result sets as you like.}
\par {\loch\f0\fs24\lang1033\i0\b0 If you switch back to a particulair result set, the last query's results are still there.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 This way, it is easy to obtain 'in line' variables, without the need to have several instances of the db component, or assigning them to your variables.}
\par 
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b FormatQuery Query parameter formatting }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Another nice feature is the FormatQuery() method, where you can query like: }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   FormatQuery ('select * from %s where %s=%d', [ftable, ffield, random(10)] ); }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Depending on the parameters numeric or stringvalues, quoted or unquoted, binary-safe escaped or unscaped are added. }
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 This funtion is still somewhat experimental, so behaviour may change a bit. }
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b \line }
\par \page\pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Usage example - quick introduction}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b Introduction To Libsql Querying}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 The entire idea about libsql is to query the database with as little code as necessary.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Integer Example}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 We query the database for a single integer value and use it for further processing:}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b The easy way}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.Query ('select max(id) from sometable');}
\par {\loch\f6\fs24\lang1033\i0\b0   intMaxID := DB.Results[0].Format[0].AsInteger;}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ab\ltrch\dbch\af8\afs24\langfe255\ab\loch\f0\fs24\lang1033\b {\loch\f0\fs24\lang1033\i0\b explanation}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Querying the result if the query was not succeeded does not generate an error. Also, you will need to do no range checking. You can safely access the first TResultRow Results[0], even if there would be no single result. In this case, it will return a NullR
ow.}
\par {\loch\f0\fs24\lang1033\i0\b0 Result rows return result cells TResulCell. If a row is out of range, the content will be filled with NULL again. Formatting to Integer will result in Zero, so intMaxID will be 0 if the query had failed. Just note that no exception or whatsoever is generat
ed.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 You could make sure results exists by one of the following ways:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.RowCount}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 or, in above example, by testing:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.Results[0].IsNull[0]}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\i\b\fs23\i\b\fs23\i\b \ltrpar\s7\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ai\ab\ltrch\dbch\af8\afs23\langfe255\ai\ab\loch\f0\fs23\lang1033\i\b {\loch\f2\fs23\lang1033\i\b the 'tough' way}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.Query ('select max(id) from sometable');}
\par {\loch\f6\fs24\lang1033\i0\b0   if (DB.RowCount = 1) and not DB.Results[0].IsNull[0] then}
\par {\loch\f6\fs24\lang1033\i0\b0     intMaxID := DB.Results[0].Format[0].AsInteger}
\par {\loch\f6\fs24\lang1033\i0\b0   else \tab  \tab }
\par {\loch\f6\fs24\lang1033\i0\b0     intMaxID := 0;}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ltrch\dbch\af8\afs32\langfe255\loch\f0\fs32\lang1033 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ab\ltrch\dbch\af8\afs24\langfe255\ab\loch\f0\fs24\lang1033\b {\loch\f0\fs24\lang1033\i0\b explanation}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Format on a NULL cell will default to the 'most reasonable' value. For Integers, this is 0. Strings are empty, booleans are false. Again, no error is raised.}
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 Above two solutions will give entirely the same result!}
\par 
\par \page\pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i 
\par 
\par 
\par 
\par 
\par 
\par 
\par \pard\plain \ltrpar\s3\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sb240\sa120\keepn\ql\rtlch\afs28\lang255\ltrch\dbch\afs28\langfe255\loch\f2\fs28\lang1033 {\loch\f2\fs28\lang1033\i0\b0 Libsql and Unicode / UTF-8}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 On special request i've implemented native unicode support (currenlt sqlite 3.0 only) in libsql. This means, from the pascal side, that there are functions with take WideChar as type or return WideChars. mysql 4.1 unicode support may come in future.}
\par {\loch\f0\fs24\lang1033\i0\b0 For databases _not_ supporting 16-bit unicode, widechars will get converted to UTF-8 automatically. When fetching results dito, if WideString result set is not available, the result string (textual) is treated as UTF-8 and put in a widestring. Note on this
: if you don't want original treated as utf-8, you should not request widestring on non-unicode databases.}
\par {\loch\f0\fs24\lang1033\i0\b0 For sqlite, this means i altered the query routine to handle native unicode, thereby effectively removing the need for utf-8 conversions, and thus increasing the speed. Also, explicit BLOB field support is added. In case of a blob (where _database_ mention
ed the field is blob), results as widestring will give an empty string BUT results as string will contain the blob field. no conversion from blob to widestring is made. take care.}
\par {\loch\f0\fs24\lang1033\i0\b0 Unicode property: ignore this. or maybe not. chances are i take this property to decide how to fetch result sets. }
\par {\loch\f0\fs24\lang1033\i0\b0 There currently are some, probably unnoticable, tiny differences in how query and queryW is handled, also the way results are fetched. you will especially note on blob fields. please report issues or suggestions.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Unicode property.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Unicode property may be usefull to alter some behaviour on specific cases, but explicit use of default/widestring properties make this not needed.}
\par {\loch\f0\fs24\lang1033\i0\b0 for example, you explicitely choose between Query and QueryW. if database supports unicode (16-bit) QueryW will not do any conversion. However, if database does not support unicode, QueryW will convert the widestring to UTF-8 (8-bit) and call the Query met
hod.}
\par {\loch\f0\fs24\lang1033\i0\b0 Query will never do any conversion, you have to parse data as is.}
\par {\loch\f0\fs24\lang1033\i0\b0 UTF-8 conversions on whole queries should not be problem, except on blob fields. some rethinking must be done to modify blob field support. FormatQuery / FormatQueryW are good candidates for this.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ai\ab\ltrch\dbch\af8\afs24\langfe255\ai\ab\loch\f0\fs24\lang1033\i\b {\loch\f0\fs24\lang1033\i\b For the time, consider the property as obsolete.}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Reference}
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Locking And Unlocking, Transactions:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Transacations are implemented in such a way that it's thread-safe, you should use the appropiate tlitedb methods for that:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par {\loch\f6\fs24\lang1033\i0\b0   TLiteDB.starttransaction; }
\par {\loch\f6\fs24\lang1033\i0\b0   //do some query }
\par {\loch\f6\fs24\lang1033\i0\b0   TLiteDB.commit }
\par {\loch\f6\fs24\lang1033\i0\b0   //or: }
\par {\loch\f6\fs24\lang1033\i0\b0   TLiteDB.rollback }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Alternatively you can do it yourself with the lock and unlock methods: }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par {\loch\f6\fs24\lang1033\i0\b0   TLitedb.lock; }
\par {\loch\f6\fs24\lang1033\i0\b0   TLitedb.query ('begin'); }
\par {\loch\f6\fs24\lang1033\i0\b0   TLitedb.query ('commit'); }
\par {\loch\f6\fs24\lang1033\i0\b0   TLitedb.unlock; }
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 Above two method will result in exactly the same low-level behaviour.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 You can also use the Lock and Unlock statements in multi-threaded environments where you share a single database handle. This is especially usefull for sqlite. For mysql it is just recomended you open a new handle for each thread. Please be aware that mult
iple-threads sharing handles is only safe on windows systems, unix-based systems may find the handle invalid as soon as it is used by another process than the process that created it. }
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Threading}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Some effort was done to make TSqlDB thread-safe, so multiple threads can access the same database.}
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Dependent on the situation, you may consider different solutions. }
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b mysql}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 If you use mysql, it is recomended to give each thread its own connection.}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b sqlite}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 For Sqlite, the situation is slightly different. For optimal performance on the database, and to avoid locking issues, you should consider letting multiple threads share the same instance of TLiteDB (!)}
\par {\loch\f0\fs24\lang1033\i0\b0 The methods Lock and Unlock, which effectively can synchronize multiple threads using a critical section, are available for that purpose.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Compiler Switches}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Note that there is a compiler switch: WITH_GUI which will in turn set the AS_COMPONENT directive. If declared, the TLiteDB will be class TComponent, else it will be class TObject. }
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 Some additional features are available with the WITH_GUI directive (**)}
\par {\loch\f0\fs24\lang1033\i0\b0 If compiled as component, the constructor would be like: }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0  db := TLiteDB.Create (Self, databasename); }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 If you would unset the WITH_GUI switch, the create statement would be like:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0    db := TLiteDB.Create (databasename);}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 (**) some support functions}
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Last Insert ID}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 TPasDB.LastInsertID is an object-safe property that can be called any time after a query, as long as the database object is not used for another query. It is set right after each query, by the databases 'lastinsertid' function. This is currently a small, b
ut generally irrelevant, performance penalty on non-inserting queries.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b LastError}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 You can verify by examining the result set, by examining DB.LastError, or by examining the results of DB.Query}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   if not DB.Query ('select error from') then}
\par {\loch\f6\fs24\lang1033\i0\b0     writeln ('DB error: '+DB.LastError);}
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b 
\par {\loch\f2\fs28\lang1033\i0\b Formatting Queries}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 FormatQuery is a powerfull method of inserting parameters into your query:}
\par {\loch\f0\fs24\lang1033\i0\b0  \tab  \tab }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.FormatQuery ('insert into customers (name, password, someid) values (%s, %s, %d)', ['admin', 'secret', 0] );}
\par {\loch\f6\fs24\lang1033\i0\b0  \tab  \tab }
\par {\loch\f6\fs24\lang1033\i0\b0   DB.FormatQuery ('select from %u where id=%d', [tablename, id]);}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b String Values}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 String values are shortest way to read:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   DB.FormatQuery ('select name from customer where id=%d', [id]);}
\par {\loch\f6\fs24\lang1033\i0\b0   strCustomer := DB.Results[0][0];}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Notes on accessing result sets}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Most methods are intended to be safe, i.e. Exceptions will not occur. }
\par {\loch\f0\fs24\lang1033\i0\b0 Non-existing values will return: }
\par {\loch\f0\fs24\lang1033\i0\b0 * an empty string }
\par {\loch\f0\fs24\lang1033\i0\b0 * zero }
\par {\loch\f0\fs24\lang1033\i0\b0 * IsNull is True }
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Number of rows and fields}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0 You should use the RowCount and Fields.Count properties to know the size of your result set, if not known. }
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Callback Only}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 if your query gets to large, you can set the CallbackOnly property to true and implement the }
\par {\loch\f0\fs24\lang1033\i0\b0 onfetchrow event:}
\par  
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   TOnFetchRow = procedure (Sender:TObject; Row:TResultRow) of Object;}
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Returned rows are always complete. Fetching will stop only the first row after the memory limit has exceeded.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Limiting memory usage}
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b maxquerysize }
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 You can set the maxquerysize (defaults to 16Mb) to avoid memory abuse.}
\par {\loch\f0\fs24\lang1033\i0\b0 If callbackonly is set to false libsql will stop fetching if this size is exceeded. If CallbackOnly is set to true, this will have no effect (independent of row size, if you fetch a row with 32Mb blob, it is yours).}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Multiple result sets}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Multiple result sets is a valuable tool. You must consider the amount of memory used on large queries. As far as i am aware, there are no side effects.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 There are two ways to use several result sets:}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\aspalpha\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 let the db object manage them, this is discussed first}
\par \pard\plain {\listtext\pard\plain \li283\ri0\lin283\rin0\fi-283\f4\fs18\f4\fs18\f4\fs18 \bullet }\ilvl0 \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\ls0\aspalpha\li283\ri0\lin283\rin0\fi-283\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 create a resultset with the db as owner, this is discussed next.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ai\ltrch\dbch\af8\afs24\langfe255\ai\loch\f0\fs24\lang1033\i {\loch\f0\fs24\lang1033\i\b0 A result set contains the following variables:}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   last_insert_id}
\par {\loch\f6\fs24\lang1033\i0\b0   rowcount}
\par {\loch\f6\fs24\lang1033\i0\b0   0..n TResultRow (''Results'')}
\par {\loch\f6\fs24\lang1033\i0\b0   Fields}
\par {\loch\f6\fs24\lang1033\i0\b0   lasterror (..)(**)(?)(discuss)}
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 You can select, add or delete or clear result sets using appropiate methods (partly under development)}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b UseResultSet}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 This function tells libsql to use a particulair result set. This helps you having the results of multiple queries next to eachother, without need to copy to local variables.}
\par {\loch\f0\fs24\lang1033\i0\b0 Returns a pointer to the current TResultSet object.}
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.UseResultSet ('set1');}
\par {\loch\f6\fs24\lang1033\i0\b0   db.Query ('select * from table1);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.UseResultSet ('set2');}
\par {\loch\f6\fs24\lang1033\i0\b0   db.Query ('select * from table2);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.UseResultSet ('set1');}
\par {\loch\f6\fs24\lang1033\i0\b0   //now working on results from your first table}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (db.ResultsAsText);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.UserResultSet ('set2');}
\par {\loch\f6\fs24\lang1033\i0\b0   //now working with set2 again.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 You can just use a result set, if it does not exist yet, it will be created for you. Changing the resultsset will affect all consequent queries until result set is changed again.}
\par {\loch\f0\fs24\lang1033\i0\b0 Result sets are indexed on name, case-insensitive. So , 'SeT1' equals 'set1'.}
\par 
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b AddResultSet}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Returns a TResultSet. Never nil.}
\par {\loch\f0\fs24\lang1033\i0\b0 The resultset returned is not automatically set as default result set. Use UseResultSet for that.}
\par {\loch\f0\fs24\lang1033\i0\b0 Currently the object TResultSet is not of much use for the end user. Although all information is there, it is not conveniently accessible, except for some variables like FRowCount, FColCount,}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b ExistsResultSet}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Test if a certain result set exists. Returns a TResultset or nil.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b ClearResultSets}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Deletes all result sets, except the default set, whihc is cleared. The current resultset will point to the default result set.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b DeleteResultSet}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Deletes a specific result set. Returns boolean result indicating if just deleted result set actually existed.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   If not DeleteResultSet ('set1') then}
\par {\loch\f6\fs24\lang1033\i0\b0     writeln ('resultset did not exist');}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 If the current resultset is the set just deleted, then the current set will point to the default resultset. Else, the current set is not changed.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   db.UseResultSet('test');}
\par {\loch\f6\fs24\lang1033\i0\b0   db.Query ('select 1+2');}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (db.results[0][0]); // <== outputs '3'  }
\par {\loch\f6\fs24\lang1033\i0\b0   db.DeleteResultSet ('test');}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (db.results[0][0]); // <== will provide no result,}
\par {\loch\f6\fs24\lang1033\i0\b0                          // default result set is active again.}
\par 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Getting a copy of a result set}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 {\loch\f6\fs24\lang1033\i0\b0   var rs: TResultSet;}
\par {\loch\f6\fs24\lang1033\i0\b0   //..//}
\par {\loch\f6\fs24\lang1033\i0\b0   rs := db.CurrentSet;}
\par {\loch\f6\fs24\lang1033\i0\b0   db.UseResultSet ('anotherset');}
\par {\loch\f6\fs24\lang1033\i0\b0   //you can still access the previous set by rs}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (rs.Row[0][0]);}
\par {\loch\f6\fs24\lang1033\i0\b0   writeln (rs.Row[1].Format[2].AsInteger);}
\par {\loch\f6\fs24\lang1033\i0\b0   db.FormatQuery ('insert into beta (lid) values (%d)',}
\par {\loch\f6\fs24\lang1033\i0\b0                   [rs.FLastInsertID]}
\par {\loch\f6\fs24\lang1033\i0\b0                  );}
\par {\loch\f6\fs24\lang1033\i0\b0   //clear the contents of rs to release memory:}
\par {\loch\f6\fs24\lang1033\i0\b0   rs.Clear;}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par \pard\plain \sb240\sa120\keepn\f2\fs23\b\fs23\b\fs23\b \ltrpar\s8\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs23\lang255\ab\ltrch\dbch\af8\afs23\langfe255\ab\loch\f0\fs23\lang1033\b {\loch\f2\fs23\lang1033\i0\b Result sets use/abuse}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 All memory is correctly maintained by the component. However, take care that result sets keep occupying memory until they are re-used, until you clear the set, until you delete the set or all sets, or until the component is freed.}
\par 
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\fs24\lang1033 
\par 
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f6\fs24\lang1033 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Appendix A. Garbage documentation}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Pieces of documentation that may not have found a place in above document.}
\par \pard\plain \ltrpar\s1\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 New is ODBC support. This is quite a new area, also ODBC has some limtitations compared to mysql or sqlite api.}
\par {\loch\f0\fs24\lang1033\i0\b0 Most important:}
\par {\loch\f0\fs24\lang1033\i0\b0 ODBC lacks a uniform LAST_INSERT_ID, you will have to manually query and avoid threading issues. On some databases (mssql?), SELECT @@IDENTITY may do this job for you. Please read database specific (odbc) documentation}
\par {\loch\f0\fs24\lang1033\i0\b0 Other issues:}
\par {\loch\f0\fs24\lang1033\i0\b0 ODBC has not support for unicode databases. You can use libsql to store and retrieve unicode, it will converted for you to UTF-8 if desired. Use the QueryW and FormatQueryW parameters.}
\par {\loch\f0\fs24\lang1033\i0\b0 Transactions are not supported yet.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 Limitations of libsql:}
\par {\loch\f0\fs24\lang1033\i0\b0 libsql does not support parameter binding. The idea is to write queries as short and readbable as possible. FormatQuery will do that. Also, parameter binding tend to be very database specific, each database having it's own types etc. Since libsql targets t
o be a uniform interface, parameter binding conflicts with that.}
\par {\loch\f0\fs24\lang1033\i0\b0 Please note that i do not exclude use of parameter binding for future version, by having a BindQuery using simulair syntax as FormatQuery.}
\par {\loch\f0\fs24\lang1033\i0\b0 SQL preparation \endash  all sql is executed imemdiately. Sql statements do not explicitely get prepared and executed, nor is the any distinguish for queries with/without result set (for example select vs update). The performance penalty for this is generally ver
y minimal.}
\par {\loch\f0\fs24\lang1033\i0\b0 Those limitations are inherent to the design of libsql. Libsql targets multi-threaded applications and programs that perform a high amount of queries, with minimal coding efforts.}
\par 
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par 
\par 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs28\b\fs28\b\fs28\b \ltrpar\s6\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs28\lang255\ab\ltrch\dbch\af8\afs28\langfe255\ab\loch\f0\fs28\lang1033\b {\loch\f2\fs28\lang1033\i0\b Appendix B. Issues}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 
\par {\loch\f0\fs24\lang1033\i0\b0 Freepascal compiler seem to have issues on variants.}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 Although libsql perfectly compiles, i encountered some incompatabilities. I spent quite some hours to figure out what is happening. Unfortunately, the debugger does not seem to like this console application.}
\par {\loch\f0\fs24\lang1033\i0\b0 I hope this can be fixed in next release.}
\par {\loch\f0\fs24\lang1033\i0\b0 Explanation:}
\par {\loch\f0\fs24\lang1033\i0\b0 with var i declared as integer, and a simple query like:}
\par {\loch\f0\fs24\lang1033\i0\b0 \ldblquote select 1+2 as res\rdblquote }
\par {\loch\f0\fs24\lang1033\i0\b0 coded as:}
\par {\loch\f0\fs24\lang1033\i0\b0 rs := TResultSet.Create (db); //db is mysql, sqlite or odbc type }
\par {\loch\f0\fs24\lang1033\i0\b0 rs.query ('select 1+2 as res');}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 you can {\ul not} fetch it as follows:}
\par {\loch\f0\fs24\lang1033\i0\b0 i := rs.row[0]['res'];}
\par {\loch\f0\fs24\lang1033\i0\b0 you can also not fetch it as}
\par {\loch\f0\fs24\lang1033\i0\b0 i := rs.row[0][0];}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 fpc will complain it cannot convert an empty string to integer, which is supposingly correct.}
\par {\loch\f0\fs24\lang1033\i0\b0 It {\ul will} work though if you just perform:}
\par {\loch\f0\fs24\lang1033\i0\b0 i := rs.row[0].format[0].AsInteger;}
\par 
\par {\loch\f0\fs24\lang1033\i0\b0 i am pretty clueless on this one, probably with some more testing it may be possible to tell what the problem is.}
\par {\loch\f0\fs24\lang1033\i0\b0 However, for now i am just going ot release 0.55.}
\par {\loch\f0\fs24\lang1033\i0\b0 Borlands compilers does not have this issue it seems.}
\par 
\par 
\par \page\pard\plain \sb240\sa120\keepn\f2\fs32\b\fs32\b\fs32\b \ltrpar\s4\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\ql\rtlch\af9\afs32\lang255\ab\ltrch\dbch\af8\afs32\langfe255\ab\loch\f0\fs32\lang1033\b {\loch\f2\fs32\lang1033\i0\b Credits}
\par \pard\plain \ltrpar\s2\cf0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\aspalpha\sa120\ql\rtlch\af9\afs24\lang255\ltrch\dbch\af8\afs24\langfe255\loch\f0\fs24\lang1033 {\loch\f0\fs24\lang1033\i0\b0 Many thanks go to Patrick, Vladimir and Miha, for active development of libsql. Thanks to others who use sql and/or motivated me continuing active development.}
\par {\loch\f0\fs24\lang1033\i0\b0 Also, thanks to RDP, the employer where it all started with mydb.pas, and camp site 'achterberg' where TLiteDB got developed. Thanks to my current employer Hydrion / Nieuwland for supporting open-source development.}
\par {\loch\f0\fs24\lang1033\i0\b0 Thanks to my girlfriend and daughter for letting me programm in my spare time :)}
\par 
\par 
\par 
\par 
\par }